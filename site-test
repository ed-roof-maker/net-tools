#!/usr/bin/bash
cwdf=$(realpath $0)
cwdd=$(dirname ${cwdf})

AT=${cwdd}
. ${AT}/constants

A_SITE=$1
A_RESOLVER=$2

print_help () {
   printf '
   Help for '$0'
   
   Example Usage: -
      '$0' icann.org      		 # defaults to 127.0.0.1 resolver
      '$0' icann.org 1.1.1.1     # network resolver example

'
   exit 0
}
if [ "$1" == '--help' ]
then
   print_help
   exit 0
fi

f_has_resolution () {
   SITE=$1
   if [ "${SITE}" == '' ]
   then
      domains=(startpage.com swisscows.ch google.com wikipedia.org)
      for s in ${domains[@]}
      do
         has_answer=$(nslookup -retry=2 -timeout=30 ${s} | grep -i -e 'authoritative\sanswer' | wc -l)
         not_found=$(nslookup -retry=2 -timeout=30 ${s} | grep -i -e "can.*find" | wc -l)
         if [ ${has_answer} -ge 1 ]
         then
            echo OK
            return
         fi
      done
      echo FAIL
   else
      has_answer=$(nslookup -retry=2 -timeout=30 ${SITE} | grep -i -e 'authoritative\sanswer' | wc -l)
      not_found=$(nslookup -retry=2 -timeout=30 ${SITE} | grep -i -e "can.*find" | wc -l)
      if [ ${has_answer} -ge 1 ]
      then
         echo OK
      else
         echo FAIL
      fi
   fi
}



max=6
ok=0
dnssec_configured_working=$(bash ${AT}/site-test-h-dig ${A_SITE} ${A_RESOLVER} | grep OK | wc -l)
if [ ${dnssec_configured_working} -ge 1 ]
then
   ok=$(( ${ok} + 3 ))
   f_pok 'It has correctly configured DNSSEC.'
else
   f_perr 'No DNSSEC configured.'
fi
issuer=0
has_tls13=$(curl -v -s --tlsv1.3 https://${A_SITE} 2>/dev/null >/dev/null;echo $? | grep -e 0 -e 52 | wc -l)
if [ ${has_tls13} -ge 1 ]
then
   ok=$(( ${ok} + 3))
   f_pok 'It is connectable via TLS1.3'
else
   has_tls12=$(curl -v -s --tlsv1.2 https://${A_SITE} 2>/dev/null >/dev/null;echo $? | grep -e 0 -e 52 | wc -l)
   if [ ${has_tls12} -ge 1 ]
   then
      ok=$(( ${ok} + 2))
      f_pwarn 'It is only connectable via TLS1.2'
   else
      f_perr 'Bad SSL config. TLS is too old.'
   fi
fi

score="${ok}/${max}"
f_pdone 'Site connection security score is '${score}' for site - '${A_SITE}
if [ ${ok} -lt 3 ]
then
   f_perr 'Score is too low for business trust.'
   exit 1
else
   f_pok 'Score is good for business trust.'
   exit 0
fi


